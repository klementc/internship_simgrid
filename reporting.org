#+TITLE: Internship on SimGrid with Martin Quinson and Anne-Cécile Orgerie.
#+DATE: [2016-05-17 Mon]--[2016-05-15 Fri]
#+AUTHOR: Simon Bihel
#+EMAIL: [[mailto:simon.bihel@ens-rennes.fr]]
#+WEBSITE: [[simonbihel.me]]
#+LINK: [[https://github.com/sbihel/internship_simgrid]]
#+LANGUAGE: en

* Introduction
  Propose ways to formulate, on the user's side of SimGrid, elastic tasks (tasks
  with fluctuating usage/size).

* Findings
** Bibliography
- <<CS_p>>[[http://www.buyya.com/papers/CloudSim2010.pdf][CloudSim]]
- <<DCs>> DCsim's [[https://github.com/digs-uwo/dcsim][repo]], [[http://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=6380046][paper1]], [[http://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=6727859][paper2]] and [[https://www.dmtf.org/sites/default/files/svm2012_presentation1.pdf][slides]].
- <<IS_p>>[[http://download.springer.com/static/pdf/46/chp%253A10.1007%252F978-3-642-31552-7_39.pdf?originUrl=http%3A%2F%2Flink.springer.com%2Fchapter%2F10.1007%2F978-3-642-31552-7_39&token2=exp=1463995249~acl=%2Fstatic%2Fpdf%2F46%2Fchp%25253A10.1007%25252F978-3-642-31552-7_39.pdf%3ForiginUrl%3Dhttp%253A%252F%252Flink.springer.com%252Fchapter%252F10.1007%252F978-3-642-31552-7_39*~hmac=81aa15290d88a2cbd2017547f69672bbe5f6ce338b05eba1489ca37d2cfb1fa2][ISim]].
** Contribution

* Development

* Global Goals
** TODO Internship subject <2016-05-30 Mon>
** TODO Bibliography <2016-05-17 Tue>--<2016-05-27 Fri>
** TODO Contribution <2016-05-30 Mon>--<2016-06-17 Fri>
** TODO App + study <2016-06-20 Mon>--<2016-06-27 Mon>
** TODO Experiments <2016-06-28 Tue>--<2016-07-05 Tue>
** TODO Report writing <2016-07-06 Wed>--<2016-07-13 Wed>
** TODO Report 1.0 <2016-07-15 Fri>

* Journal
** Week 1 <2016-05-17 Tue>--<2016-05-20 Fri>
*** Things Done
- Read Introduction, Background and Architecture parts of the CloudSim's paper
  [[CS_p]]. Gave better understanding of cloud's layers and the difficulties
  added to grids.
- Opened the [[http://www.buyya.com/papers/gridsim.pdf][GridSim paper]], looked at some figures and closed it upon
  encountering pages of uml class diagram and code samples.
- Meet-up with Anne-Cécile and Martin. Better understanding of my role (how to
  express elastic tasks) and the context (other simulators, the point of this
  work, ...).
- Tweaked/Fixed vim/tmux/orgmode config stuff, [[https://github.com/sbihel/dotfiles][my dotfiles]].
- Looked resources on DCsim <<DCs>>. Said in 2012 that CloudSim is missing VM
  replication, VM dependences, work conserving cpu... Talks about reallocating
  resources to VM (not wasting cpu's unused shares/resources) and managing
  resources following fluctuating usage in general, but not elastic tasks. In
  the few examples, there is one about StaticPeak as a SimulationTask but all
  examples look the same, I must have missed something.
*** Blocking Points
- +Can't connect on irc through Inria's network ??+ Currently using a ssh
  tunnel.
- "lua5.2 found when lua5.3 is required" for -Denable_lua. Library for 5.3 not
  installed. /on OS X/
- libdw not found for -Denable_model-checking. /on OS X/
- +Should I focus on VM deployment (allocation, provisioning) or VM usage
  (management) ? ("les charges")+ VM usage. -> User is using the simulator to
  test it's allocator of VMs.
*** Planned Work
- [X] Install SimGrid from source
- [X] Autoconnect #simgrid on irc.oftc.net
- [X] Read tutorial [[http://simgrid.gforge.inria.fr/documentation.php]]
- [X] Go through tutorial [[http://simgrid.gforge.inria.fr/simgrid/3.13/doc/tutorial.html]]
- [X] See concurrent tools like DCsim and GridSim. Pay attention to VM charges.

** Week 2 <2016-05-23 Mon>--<2016-05-27 Fri>
*** Things Done
- DCsim's code. There is InteractiveTasks which might correspond to elastic
  tasks. It consists of default and max number of instances, resource size,
  normal service time, and visit ratio. I guess if the ratio changes over time
  the task become elastic.
- CloudSim's code. There is HostDynamicWorkload which might correspond to
  elastic taks. List of processing elements... Meh, looks like it's just for
  keeping up to date with perfomance degradation of the VM.
- Took a look at [[IS_p][ISim's paper]] because it was speaking of dynamic workload. But
  it is a meta-scheduler and it performs workload consolidation for power
  management. In the end I think it has nothing to do with what I looking for.
- Contribution proposal 1. Elastic task is like a server's requests log. The
  parts that aren't over 100% of usage are reduced as one task. And we deal with
  the other parts. Cons: long non excessive part translated into one task can
  lose a lot information (lot of usage on a short time can have effect on
  bandwidth usage for example?); if there is lot of peaks over the limit then
  there is a lot to deal with if it goes down between each peak. Maybe maths
  could help having a smarter decomposition.
- Contribution proposal 2. Like in DCsim a task is triggerred/visited regularly
  and to simulate the elasticity the ratio of visit has to be changed. Pros: the
  precision of the simulation depends on the precision of ratio changes given by
  the user, thus performances depend on the user (avoiding responsibilities
  ¯\_(ツ)_/¯); convenient for the user.
- Contribution proposal 3~. If we consider that elastic tasks never really end,
  we could play with the resources of the VMs on which it is executed and the
  task would use it fully. I guess that would be a way of doing proposal 2.
  Cons: playing with resources induce not simulating the real world and make
  falsifying the results because resources management has a huge impact on other
  stuff.
- Contribution proposal 4~. Generating function or history {date; value}*.
- Read DCworms' paper. Simulation to study the energy-consumption of
  datacenters. Part of CoolEmAll project. Broad range of tools. What's
  interesting for me is that it uses workflows to model workloads. But I think
  it's focusing on a model that allow better energy consumption analyzing.
  Globally it is very focused on having control on everything to get a precise
  evaluation of the energy consumption.
*** Blocking Points
- [[https://books.google.fr/books?id=io6aBQAAQBAJ&pg=PA92&lpg=PA92&dq=cloud+simulation+dynamic+workload&source=bl&ots=HkoqPCSnzM&sig=Ko-BHh-jMjx_6IDhE67RnTHW3h4&hl=en&sa=X&ved=0ahUKEwih0d65lPDMAhVrB8AKHW0EBVwQ6AEIMjAC#v=onepage&q=cloud%20simulation%20dynamic%20workload&f=false][This paper]] says that [[http://www.ijsr.net/archive/v2i8/MTIwMTMxMjA=.pdf][this paper]] presents an approach at modeling dynamic
  workloads in CloudSim but I didn't understand why.
- Can't seem to find stuff about dynamic tasks/workload, only stuff like dynamic
  resource allocation.
*** Planned Work
- [X] Find other simulators. (e.g. survey cloud simulators).
- [X] See concurrent tools like DCsim and GridSim. Pay attention to varying
      workload. Read doc and source. When reading articles, summarize it.
- [ ] Connect to iwifi-interne.
- [ ] Write introduction.
- [ ] Explain why DCworms isn't that useful.
- [ ] Discover [[http://www.wikibench.eu/]]. What is it ? Who's using it ?
- [ ] Write a formal scenario file that uses the proposals.
- [ ] Find criterion to quantify the quality of the proposals. (e.g. complexity
      for the user; size on disc/in memory; computing speed; expressiveness;
      implementable in SimGrid)
- [ ] Bibliography, which tools use DCsim, CloudSim...
- [ ] Bibliography, find some papers of (potential) users that describe their
      setup.
- [ ] See workload injection (injecteurs de charge) in NS-3. Should be similar
      to what we're trying to do.
- [ ] Think about application workflows and interactions between interdependent
      (micro)(elastic)tasks.

** Week 3 <2016-06-06 Mon>--<2016-06-03 Fri>
*** Things Done
*** Blocking Points
*** Planned Work

** Week 4 <2016-06-06 Mon>--<2016-06-10 Fri>
*** Things Done
*** Blocking Points
*** Planned Work

** Week 5 <2016-06-13 Mon>--<2016-06-17 Fri>
*** Things Done
*** Blocking Points
*** Planned Work

** Week 6 <2016-06-20 Mon>--<2016-06-24 Fri>
*** Things Done
*** Blocking Points
*** Planned Work

** Week 7 <2016-06-27 Mon>--<2016-07-01 Fri>
*** Things Done
*** Blocking Points
*** Planned Work

** Week 8 <2016-07-04 Mon>--<2016-07-08 Fri>
*** Things Done
*** Blocking Points
*** Planned Work

** Week 9 <2016-07-11 Mon>--<2016-07-15 Fri>
*** Things Done
*** Blocking Points
*** Planned Work

* Conclusion
